// Generated by CoffeeScript 1.3.3
(function() {
  var displayClippings, dropFile, parseClippings, showBooks;

  this.book = $$({
    view: {
      format: '<li><a href="#" data-bind="title"></a></li>'
    }
  });

  this.quote = $$({
    view: {
      format: '<tr>\n <td>\n   <div class="share">\n     <a href="#"><i class="icon-twitter"></i></a>\n     <a href="#"><i class="icon-pinterest"></i></a>\n     <a href="#"><i class="icon-facebook"></i></a>\n   </div>\n   <h2 data-bind="text"/>\n   <div class="info" style="display:none;">\n     <span data-bind="title"/>  &sect;  <span data-bind="location"/>\n   </div>\n </td>\n</tr>'
    },
    controller: {
      'hover h2': function() {
        this.view.$('tr').css('border-left-style', 'solid');
        return this.view.$('.info').slideDown();
      },
      'mouseout h2; mouseout div;': function() {
        this.view.$('tr').css('border-left-style', 'none');
        return this.view.$('.info').slideUp();
      }
    }
  });

  this.quotes = [];

  this.books = {};

  dropFile = function() {
    return console.log(this);
  };

  parseClippings = function(data) {
    var clip, clipping, note, notes, _i, _len;
    window.clippings = data.split('==========');
    notes = [];
    for (_i = 0, _len = clippings.length; _i < _len; _i++) {
      clip = clippings[_i];
      if (clip.indexOf("Added on ") !== -1) {
        clipping = clip.split('Added on ');
        note = {};
        note.title = clipping[0].split('\r\n- ')[0].replace('\r\n', '').replace(/\([\w\s.]+\)$/, '');
        books[note.title] = $$(book, {
          'title': note.title
        });
        note.author = clipping[0].split('\r\n- ')[0].replace('\r\n', '').match(/\([\w\s]+\)$/);
        note.location = clipping[0].split('\r\n-')[1].replace('\r\n', '').replace('|', '').replace('   ', '').replace(' |', '');
        note.text = clipping[1].split('\r\n\r\n')[1].replace('\r\n', '');
        notes.push(note);
      }
    }
    showBooks();
    return displayClippings(notes);
  };

  showBooks = function() {
    var i, _i, _len, _ref, _results;
    _ref = Object.keys(books);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      i = _ref[_i];
      _results.push($$.document.append(books[i], '#booklist'));
    }
    return _results;
  };

  displayClippings = function(clippings) {
    var clip, key, _i, _len;
    $('#dropview').slideUp(500);
    $('#listview').slideDown(500);
    for (key = _i = 0, _len = clippings.length; _i < _len; key = ++_i) {
      clip = clippings[key];
      quotes[key] = $$(quote, clip);
      $$.document.append(quotes[key], '#listview table');
    }
    return $(window.frame).animate({
      height: 600,
      width: 900
    }, 1000);
  };

  $(window).on('app-ready', function() {
    var osxpath;
    window.fs = window.require("fs");
    osxpath = '/Users/jelle/My\ Clippings.txt';
    return fs.readFile(osxpath, 'utf-8', function(err, data) {
      fs.readFile(osxpath + '.backup', 'utf-8', function(err, data) {
        if (err) {
          return fs.writeFile(osxpath + '.backup', data, 'utf-8');
        }
      });
      return parseClippings(data);
    });
  });

}).call(this);
